// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: misc/buzzer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_misc_2fbuzzer_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_misc_2fbuzzer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_misc_2fbuzzer_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_misc_2fbuzzer_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_misc_2fbuzzer_2eproto;
namespace misc {
namespace buzzer {
class MakeSound;
class MakeSoundDefaultTypeInternal;
extern MakeSoundDefaultTypeInternal _MakeSound_default_instance_;
class Note;
class NoteDefaultTypeInternal;
extern NoteDefaultTypeInternal _Note_default_instance_;
}  // namespace buzzer
}  // namespace misc
PROTOBUF_NAMESPACE_OPEN
template<> ::misc::buzzer::MakeSound* Arena::CreateMaybeMessage<::misc::buzzer::MakeSound>(Arena*);
template<> ::misc::buzzer::Note* Arena::CreateMaybeMessage<::misc::buzzer::Note>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace misc {
namespace buzzer {

// ===================================================================

class MakeSound :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:misc.buzzer.MakeSound) */ {
 public:
  MakeSound();
  virtual ~MakeSound();

  MakeSound(const MakeSound& from);
  MakeSound(MakeSound&& from) noexcept
    : MakeSound() {
    *this = ::std::move(from);
  }

  inline MakeSound& operator=(const MakeSound& from) {
    CopyFrom(from);
    return *this;
  }
  inline MakeSound& operator=(MakeSound&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MakeSound& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MakeSound* internal_default_instance() {
    return reinterpret_cast<const MakeSound*>(
               &_MakeSound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MakeSound& a, MakeSound& b) {
    a.Swap(&b);
  }
  inline void Swap(MakeSound* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MakeSound* New() const final {
    return CreateMaybeMessage<MakeSound>(nullptr);
  }

  MakeSound* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MakeSound>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MakeSound& from);
  void MergeFrom(const MakeSound& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MakeSound* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "misc.buzzer.MakeSound";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_misc_2fbuzzer_2eproto);
    return ::descriptor_table_misc_2fbuzzer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMelodyFieldNumber = 1,
  };
  // repeated .misc.buzzer.Note melody = 1;
  int melody_size() const;
  private:
  int _internal_melody_size() const;
  public:
  void clear_melody();
  ::misc::buzzer::Note* mutable_melody(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::misc::buzzer::Note >*
      mutable_melody();
  private:
  const ::misc::buzzer::Note& _internal_melody(int index) const;
  ::misc::buzzer::Note* _internal_add_melody();
  public:
  const ::misc::buzzer::Note& melody(int index) const;
  ::misc::buzzer::Note* add_melody();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::misc::buzzer::Note >&
      melody() const;

  // @@protoc_insertion_point(class_scope:misc.buzzer.MakeSound)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::misc::buzzer::Note > melody_;
  friend struct ::TableStruct_misc_2fbuzzer_2eproto;
};
// -------------------------------------------------------------------

class Note :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:misc.buzzer.Note) */ {
 public:
  Note();
  virtual ~Note();

  Note(const Note& from);
  Note(Note&& from) noexcept
    : Note() {
    *this = ::std::move(from);
  }

  inline Note& operator=(const Note& from) {
    CopyFrom(from);
    return *this;
  }
  inline Note& operator=(Note&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Note& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Note* internal_default_instance() {
    return reinterpret_cast<const Note*>(
               &_Note_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Note& a, Note& b) {
    a.Swap(&b);
  }
  inline void Swap(Note* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Note* New() const final {
    return CreateMaybeMessage<Note>(nullptr);
  }

  Note* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Note>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Note& from);
  void MergeFrom(const Note& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Note* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "misc.buzzer.Note";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_misc_2fbuzzer_2eproto);
    return ::descriptor_table_misc_2fbuzzer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrequencyHzFieldNumber = 1,
    kDurationMsFieldNumber = 2,
    kSilenceDurationMsFieldNumber = 3,
  };
  // required uint32 frequency_hz = 1;
  bool has_frequency_hz() const;
  private:
  bool _internal_has_frequency_hz() const;
  public:
  void clear_frequency_hz();
  ::PROTOBUF_NAMESPACE_ID::uint32 frequency_hz() const;
  void set_frequency_hz(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_frequency_hz() const;
  void _internal_set_frequency_hz(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 duration_ms = 2;
  bool has_duration_ms() const;
  private:
  bool _internal_has_duration_ms() const;
  public:
  void clear_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_ms() const;
  void set_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration_ms() const;
  void _internal_set_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 silence_duration_ms = 3;
  bool has_silence_duration_ms() const;
  private:
  bool _internal_has_silence_duration_ms() const;
  public:
  void clear_silence_duration_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 silence_duration_ms() const;
  void set_silence_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_silence_duration_ms() const;
  void _internal_set_silence_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:misc.buzzer.Note)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 frequency_hz_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 silence_duration_ms_;
  friend struct ::TableStruct_misc_2fbuzzer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MakeSound

// repeated .misc.buzzer.Note melody = 1;
inline int MakeSound::_internal_melody_size() const {
  return melody_.size();
}
inline int MakeSound::melody_size() const {
  return _internal_melody_size();
}
inline void MakeSound::clear_melody() {
  melody_.Clear();
}
inline ::misc::buzzer::Note* MakeSound::mutable_melody(int index) {
  // @@protoc_insertion_point(field_mutable:misc.buzzer.MakeSound.melody)
  return melody_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::misc::buzzer::Note >*
MakeSound::mutable_melody() {
  // @@protoc_insertion_point(field_mutable_list:misc.buzzer.MakeSound.melody)
  return &melody_;
}
inline const ::misc::buzzer::Note& MakeSound::_internal_melody(int index) const {
  return melody_.Get(index);
}
inline const ::misc::buzzer::Note& MakeSound::melody(int index) const {
  // @@protoc_insertion_point(field_get:misc.buzzer.MakeSound.melody)
  return _internal_melody(index);
}
inline ::misc::buzzer::Note* MakeSound::_internal_add_melody() {
  return melody_.Add();
}
inline ::misc::buzzer::Note* MakeSound::add_melody() {
  // @@protoc_insertion_point(field_add:misc.buzzer.MakeSound.melody)
  return _internal_add_melody();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::misc::buzzer::Note >&
MakeSound::melody() const {
  // @@protoc_insertion_point(field_list:misc.buzzer.MakeSound.melody)
  return melody_;
}

// -------------------------------------------------------------------

// Note

// required uint32 frequency_hz = 1;
inline bool Note::_internal_has_frequency_hz() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Note::has_frequency_hz() const {
  return _internal_has_frequency_hz();
}
inline void Note::clear_frequency_hz() {
  frequency_hz_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Note::_internal_frequency_hz() const {
  return frequency_hz_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Note::frequency_hz() const {
  // @@protoc_insertion_point(field_get:misc.buzzer.Note.frequency_hz)
  return _internal_frequency_hz();
}
inline void Note::_internal_set_frequency_hz(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  frequency_hz_ = value;
}
inline void Note::set_frequency_hz(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_frequency_hz(value);
  // @@protoc_insertion_point(field_set:misc.buzzer.Note.frequency_hz)
}

// required uint32 duration_ms = 2;
inline bool Note::_internal_has_duration_ms() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Note::has_duration_ms() const {
  return _internal_has_duration_ms();
}
inline void Note::clear_duration_ms() {
  duration_ms_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Note::_internal_duration_ms() const {
  return duration_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Note::duration_ms() const {
  // @@protoc_insertion_point(field_get:misc.buzzer.Note.duration_ms)
  return _internal_duration_ms();
}
inline void Note::_internal_set_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ms_ = value;
}
inline void Note::set_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration_ms(value);
  // @@protoc_insertion_point(field_set:misc.buzzer.Note.duration_ms)
}

// optional uint32 silence_duration_ms = 3;
inline bool Note::_internal_has_silence_duration_ms() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Note::has_silence_duration_ms() const {
  return _internal_has_silence_duration_ms();
}
inline void Note::clear_silence_duration_ms() {
  silence_duration_ms_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Note::_internal_silence_duration_ms() const {
  return silence_duration_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Note::silence_duration_ms() const {
  // @@protoc_insertion_point(field_get:misc.buzzer.Note.silence_duration_ms)
  return _internal_silence_duration_ms();
}
inline void Note::_internal_set_silence_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  silence_duration_ms_ = value;
}
inline void Note::set_silence_duration_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_silence_duration_ms(value);
  // @@protoc_insertion_point(field_set:misc.buzzer.Note.silence_duration_ms)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace buzzer
}  // namespace misc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_misc_2fbuzzer_2eproto
