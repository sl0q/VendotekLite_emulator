// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cipurse/modify_value.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cipurse_2fmodify_5fvalue_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cipurse_2fmodify_5fvalue_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cipurse_2fmodify_5fvalue_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_cipurse_2fmodify_5fvalue_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cipurse_2fmodify_5fvalue_2eproto;
namespace cipurse {
namespace modify_value {
class ModifyValue;
class ModifyValueDefaultTypeInternal;
extern ModifyValueDefaultTypeInternal _ModifyValue_default_instance_;
class NewValue;
class NewValueDefaultTypeInternal;
extern NewValueDefaultTypeInternal _NewValue_default_instance_;
}  // namespace modify_value
}  // namespace cipurse
PROTOBUF_NAMESPACE_OPEN
template<> ::cipurse::modify_value::ModifyValue* Arena::CreateMaybeMessage<::cipurse::modify_value::ModifyValue>(Arena*);
template<> ::cipurse::modify_value::NewValue* Arena::CreateMaybeMessage<::cipurse::modify_value::NewValue>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace cipurse {
namespace modify_value {

// ===================================================================

class ModifyValue :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cipurse.modify_value.ModifyValue) */ {
 public:
  ModifyValue();
  virtual ~ModifyValue();

  ModifyValue(const ModifyValue& from);
  ModifyValue(ModifyValue&& from) noexcept
    : ModifyValue() {
    *this = ::std::move(from);
  }

  inline ModifyValue& operator=(const ModifyValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModifyValue& operator=(ModifyValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModifyValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModifyValue* internal_default_instance() {
    return reinterpret_cast<const ModifyValue*>(
               &_ModifyValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModifyValue& a, ModifyValue& b) {
    a.Swap(&b);
  }
  inline void Swap(ModifyValue* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModifyValue* New() const final {
    return CreateMaybeMessage<ModifyValue>(nullptr);
  }

  ModifyValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModifyValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModifyValue& from);
  void MergeFrom(const ModifyValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModifyValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cipurse.modify_value.ModifyValue";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cipurse_2fmodify_5fvalue_2eproto);
    return ::descriptor_table_cipurse_2fmodify_5fvalue_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShortFileIdFieldNumber = 1,
    kOperandFieldNumber = 2,
    kRecordFieldNumber = 3,
  };
  // required uint32 short_file_id = 1;
  bool has_short_file_id() const;
  private:
  bool _internal_has_short_file_id() const;
  public:
  void clear_short_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 short_file_id() const;
  void set_short_file_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_short_file_id() const;
  void _internal_set_short_file_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required sint32 operand = 2;
  bool has_operand() const;
  private:
  bool _internal_has_operand() const;
  public:
  void clear_operand();
  ::PROTOBUF_NAMESPACE_ID::int32 operand() const;
  void set_operand(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_operand() const;
  void _internal_set_operand(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 record = 3 [default = 1];
  bool has_record() const;
  private:
  bool _internal_has_record() const;
  public:
  void clear_record();
  ::PROTOBUF_NAMESPACE_ID::uint32 record() const;
  void set_record(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_record() const;
  void _internal_set_record(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:cipurse.modify_value.ModifyValue)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 short_file_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 operand_;
  ::PROTOBUF_NAMESPACE_ID::uint32 record_;
  friend struct ::TableStruct_cipurse_2fmodify_5fvalue_2eproto;
};
// -------------------------------------------------------------------

class NewValue :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cipurse.modify_value.NewValue) */ {
 public:
  NewValue();
  virtual ~NewValue();

  NewValue(const NewValue& from);
  NewValue(NewValue&& from) noexcept
    : NewValue() {
    *this = ::std::move(from);
  }

  inline NewValue& operator=(const NewValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewValue& operator=(NewValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NewValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewValue* internal_default_instance() {
    return reinterpret_cast<const NewValue*>(
               &_NewValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(NewValue& a, NewValue& b) {
    a.Swap(&b);
  }
  inline void Swap(NewValue* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NewValue* New() const final {
    return CreateMaybeMessage<NewValue>(nullptr);
  }

  NewValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NewValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NewValue& from);
  void MergeFrom(const NewValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cipurse.modify_value.NewValue";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_cipurse_2fmodify_5fvalue_2eproto);
    return ::descriptor_table_cipurse_2fmodify_5fvalue_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // required sint32 value = 1;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:cipurse.modify_value.NewValue)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_cipurse_2fmodify_5fvalue_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModifyValue

// required uint32 short_file_id = 1;
inline bool ModifyValue::_internal_has_short_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ModifyValue::has_short_file_id() const {
  return _internal_has_short_file_id();
}
inline void ModifyValue::clear_short_file_id() {
  short_file_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModifyValue::_internal_short_file_id() const {
  return short_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModifyValue::short_file_id() const {
  // @@protoc_insertion_point(field_get:cipurse.modify_value.ModifyValue.short_file_id)
  return _internal_short_file_id();
}
inline void ModifyValue::_internal_set_short_file_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  short_file_id_ = value;
}
inline void ModifyValue::set_short_file_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_short_file_id(value);
  // @@protoc_insertion_point(field_set:cipurse.modify_value.ModifyValue.short_file_id)
}

// required sint32 operand = 2;
inline bool ModifyValue::_internal_has_operand() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ModifyValue::has_operand() const {
  return _internal_has_operand();
}
inline void ModifyValue::clear_operand() {
  operand_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ModifyValue::_internal_operand() const {
  return operand_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ModifyValue::operand() const {
  // @@protoc_insertion_point(field_get:cipurse.modify_value.ModifyValue.operand)
  return _internal_operand();
}
inline void ModifyValue::_internal_set_operand(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  operand_ = value;
}
inline void ModifyValue::set_operand(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_operand(value);
  // @@protoc_insertion_point(field_set:cipurse.modify_value.ModifyValue.operand)
}

// optional uint32 record = 3 [default = 1];
inline bool ModifyValue::_internal_has_record() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ModifyValue::has_record() const {
  return _internal_has_record();
}
inline void ModifyValue::clear_record() {
  record_ = 1u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModifyValue::_internal_record() const {
  return record_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ModifyValue::record() const {
  // @@protoc_insertion_point(field_get:cipurse.modify_value.ModifyValue.record)
  return _internal_record();
}
inline void ModifyValue::_internal_set_record(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  record_ = value;
}
inline void ModifyValue::set_record(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_record(value);
  // @@protoc_insertion_point(field_set:cipurse.modify_value.ModifyValue.record)
}

// -------------------------------------------------------------------

// NewValue

// required sint32 value = 1;
inline bool NewValue::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool NewValue::has_value() const {
  return _internal_has_value();
}
inline void NewValue::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NewValue::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NewValue::value() const {
  // @@protoc_insertion_point(field_get:cipurse.modify_value.NewValue.value)
  return _internal_value();
}
inline void NewValue::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void NewValue::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cipurse.modify_value.NewValue.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace modify_value
}  // namespace cipurse

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cipurse_2fmodify_5fvalue_2eproto
