// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mifare/plus/security_level.proto

#include "mifare/plus/security_level.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mifare {
namespace plus {
namespace security_level {
}  // namespace security_level
}  // namespace plus
}  // namespace mifare
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_mifare_2fplus_2fsecurity_5flevel_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mifare_2fplus_2fsecurity_5flevel_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mifare_2fplus_2fsecurity_5flevel_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mifare_2fplus_2fsecurity_5flevel_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_mifare_2fplus_2fsecurity_5flevel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n mifare/plus/security_level.proto\022\032mifa"
  "re.plus.security_level*3\n\rSecurityLevel\022"
  "\007\n\003SL0\020\000\022\007\n\003SL1\020\001\022\007\n\003SL2\020\002\022\007\n\003SL3\020\003"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_once;
static bool descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto = {
  &descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_initialized, descriptor_table_protodef_mifare_2fplus_2fsecurity_5flevel_2eproto, "mifare/plus/security_level.proto", 115,
  &descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_once, descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_sccs, descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_mifare_2fplus_2fsecurity_5flevel_2eproto::offsets,
  file_level_metadata_mifare_2fplus_2fsecurity_5flevel_2eproto, 0, file_level_enum_descriptors_mifare_2fplus_2fsecurity_5flevel_2eproto, file_level_service_descriptors_mifare_2fplus_2fsecurity_5flevel_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mifare_2fplus_2fsecurity_5flevel_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto), true);
namespace mifare {
namespace plus {
namespace security_level {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mifare_2fplus_2fsecurity_5flevel_2eproto);
  return file_level_enum_descriptors_mifare_2fplus_2fsecurity_5flevel_2eproto[0];
}
bool SecurityLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace security_level
}  // namespace plus
}  // namespace mifare
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
