// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mifare/generic/get_version.proto

#include "mifare/generic/get_version.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace mifare {
namespace generic {
namespace get_version {
class GetVersionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVersion> _instance;
} _GetVersion_default_instance_;
class ProductVersionInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProductVersionInfo> _instance;
} _ProductVersionInfo_default_instance_;
}  // namespace get_version
}  // namespace generic
}  // namespace mifare
static void InitDefaultsscc_info_GetVersion_mifare_2fgeneric_2fget_5fversion_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mifare::generic::get_version::_GetVersion_default_instance_;
    new (ptr) ::mifare::generic::get_version::GetVersion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mifare::generic::get_version::GetVersion::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVersion_mifare_2fgeneric_2fget_5fversion_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVersion_mifare_2fgeneric_2fget_5fversion_2eproto}, {}};

static void InitDefaultsscc_info_ProductVersionInfo_mifare_2fgeneric_2fget_5fversion_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mifare::generic::get_version::_ProductVersionInfo_default_instance_;
    new (ptr) ::mifare::generic::get_version::ProductVersionInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mifare::generic::get_version::ProductVersionInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProductVersionInfo_mifare_2fgeneric_2fget_5fversion_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProductVersionInfo_mifare_2fgeneric_2fget_5fversion_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mifare_2fgeneric_2fget_5fversion_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mifare_2fgeneric_2fget_5fversion_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mifare_2fgeneric_2fget_5fversion_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mifare_2fgeneric_2fget_5fversion_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mifare::generic::get_version::GetVersion, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mifare::generic::get_version::GetVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mifare::generic::get_version::ProductVersionInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mifare::generic::get_version::ProductVersionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mifare::generic::get_version::ProductVersionInfo, info_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::mifare::generic::get_version::GetVersion)},
  { 5, 11, sizeof(::mifare::generic::get_version::ProductVersionInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mifare::generic::get_version::_GetVersion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mifare::generic::get_version::_ProductVersionInfo_default_instance_),
};

const char descriptor_table_protodef_mifare_2fgeneric_2fget_5fversion_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n mifare/generic/get_version.proto\022\032mifa"
  "re.generic.get_version\"\014\n\nGetVersion\"\"\n\022"
  "ProductVersionInfo\022\014\n\004info\030\001 \002(\014"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_sccs[2] = {
  &scc_info_GetVersion_mifare_2fgeneric_2fget_5fversion_2eproto.base,
  &scc_info_ProductVersionInfo_mifare_2fgeneric_2fget_5fversion_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_once;
static bool descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto = {
  &descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_initialized, descriptor_table_protodef_mifare_2fgeneric_2fget_5fversion_2eproto, "mifare/generic/get_version.proto", 112,
  &descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_once, descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_sccs, descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_mifare_2fgeneric_2fget_5fversion_2eproto::offsets,
  file_level_metadata_mifare_2fgeneric_2fget_5fversion_2eproto, 2, file_level_enum_descriptors_mifare_2fgeneric_2fget_5fversion_2eproto, file_level_service_descriptors_mifare_2fgeneric_2fget_5fversion_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mifare_2fgeneric_2fget_5fversion_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mifare_2fgeneric_2fget_5fversion_2eproto), true);
namespace mifare {
namespace generic {
namespace get_version {

// ===================================================================

void GetVersion::InitAsDefaultInstance() {
}
class GetVersion::_Internal {
 public:
  using HasBits = decltype(std::declval<GetVersion>()._has_bits_);
};

GetVersion::GetVersion()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mifare.generic.get_version.GetVersion)
}
GetVersion::GetVersion(const GetVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mifare.generic.get_version.GetVersion)
}

void GetVersion::SharedCtor() {
}

GetVersion::~GetVersion() {
  // @@protoc_insertion_point(destructor:mifare.generic.get_version.GetVersion)
  SharedDtor();
}

void GetVersion::SharedDtor() {
}

void GetVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVersion& GetVersion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVersion_mifare_2fgeneric_2fget_5fversion_2eproto.base);
  return *internal_default_instance();
}


void GetVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:mifare.generic.get_version.GetVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* GetVersion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVersion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mifare.generic.get_version.GetVersion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mifare.generic.get_version.GetVersion)
  return target;
}

size_t GetVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mifare.generic.get_version.GetVersion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVersion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mifare.generic.get_version.GetVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVersion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVersion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mifare.generic.get_version.GetVersion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mifare.generic.get_version.GetVersion)
    MergeFrom(*source);
  }
}

void GetVersion::MergeFrom(const GetVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mifare.generic.get_version.GetVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetVersion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mifare.generic.get_version.GetVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVersion::CopyFrom(const GetVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mifare.generic.get_version.GetVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersion::IsInitialized() const {
  return true;
}

void GetVersion::InternalSwap(GetVersion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVersion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProductVersionInfo::InitAsDefaultInstance() {
}
class ProductVersionInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ProductVersionInfo>()._has_bits_);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProductVersionInfo::ProductVersionInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mifare.generic.get_version.ProductVersionInfo)
}
ProductVersionInfo::ProductVersionInfo(const ProductVersionInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_info()) {
    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  // @@protoc_insertion_point(copy_constructor:mifare.generic.get_version.ProductVersionInfo)
}

void ProductVersionInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProductVersionInfo_mifare_2fgeneric_2fget_5fversion_2eproto.base);
  info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProductVersionInfo::~ProductVersionInfo() {
  // @@protoc_insertion_point(destructor:mifare.generic.get_version.ProductVersionInfo)
  SharedDtor();
}

void ProductVersionInfo::SharedDtor() {
  info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProductVersionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProductVersionInfo& ProductVersionInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProductVersionInfo_mifare_2fgeneric_2fget_5fversion_2eproto.base);
  return *internal_default_instance();
}


void ProductVersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mifare.generic.get_version.ProductVersionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    info_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ProductVersionInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bytes info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_info();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProductVersionInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mifare.generic.get_version.ProductVersionInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mifare.generic.get_version.ProductVersionInfo)
  return target;
}

size_t ProductVersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mifare.generic.get_version.ProductVersionInfo)
  size_t total_size = 0;

  // required bytes info = 1;
  if (_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_info());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProductVersionInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mifare.generic.get_version.ProductVersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ProductVersionInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProductVersionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mifare.generic.get_version.ProductVersionInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mifare.generic.get_version.ProductVersionInfo)
    MergeFrom(*source);
  }
}

void ProductVersionInfo::MergeFrom(const ProductVersionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mifare.generic.get_version.ProductVersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _has_bits_[0] |= 0x00000001u;
    info_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
}

void ProductVersionInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mifare.generic.get_version.ProductVersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProductVersionInfo::CopyFrom(const ProductVersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mifare.generic.get_version.ProductVersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductVersionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ProductVersionInfo::InternalSwap(ProductVersionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  info_.Swap(&other->info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProductVersionInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace get_version
}  // namespace generic
}  // namespace mifare
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mifare::generic::get_version::GetVersion* Arena::CreateMaybeMessage< ::mifare::generic::get_version::GetVersion >(Arena* arena) {
  return Arena::CreateInternal< ::mifare::generic::get_version::GetVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::mifare::generic::get_version::ProductVersionInfo* Arena::CreateMaybeMessage< ::mifare::generic::get_version::ProductVersionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::mifare::generic::get_version::ProductVersionInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
