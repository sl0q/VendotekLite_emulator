// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contact/iso7816_4.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_contact_2fiso7816_5f4_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_contact_2fiso7816_5f4_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "contact/card_slot.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_contact_2fiso7816_5f4_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_contact_2fiso7816_5f4_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_contact_2fiso7816_5f4_2eproto;
namespace contact {
namespace iso7816_4 {
class ResponseApdu;
class ResponseApduDefaultTypeInternal;
extern ResponseApduDefaultTypeInternal _ResponseApdu_default_instance_;
class TransmitApdu;
class TransmitApduDefaultTypeInternal;
extern TransmitApduDefaultTypeInternal _TransmitApdu_default_instance_;
}  // namespace iso7816_4
}  // namespace contact
PROTOBUF_NAMESPACE_OPEN
template<> ::contact::iso7816_4::ResponseApdu* Arena::CreateMaybeMessage<::contact::iso7816_4::ResponseApdu>(Arena*);
template<> ::contact::iso7816_4::TransmitApdu* Arena::CreateMaybeMessage<::contact::iso7816_4::TransmitApdu>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace contact {
namespace iso7816_4 {

// ===================================================================

class TransmitApdu :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:contact.iso7816_4.TransmitApdu) */ {
 public:
  TransmitApdu();
  virtual ~TransmitApdu();

  TransmitApdu(const TransmitApdu& from);
  TransmitApdu(TransmitApdu&& from) noexcept
    : TransmitApdu() {
    *this = ::std::move(from);
  }

  inline TransmitApdu& operator=(const TransmitApdu& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransmitApdu& operator=(TransmitApdu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TransmitApdu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransmitApdu* internal_default_instance() {
    return reinterpret_cast<const TransmitApdu*>(
               &_TransmitApdu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TransmitApdu& a, TransmitApdu& b) {
    a.Swap(&b);
  }
  inline void Swap(TransmitApdu* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TransmitApdu* New() const final {
    return CreateMaybeMessage<TransmitApdu>(nullptr);
  }

  TransmitApdu* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TransmitApdu>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TransmitApdu& from);
  void MergeFrom(const TransmitApdu& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransmitApdu* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "contact.iso7816_4.TransmitApdu";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_contact_2fiso7816_5f4_2eproto);
    return ::descriptor_table_contact_2fiso7816_5f4_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandApduFieldNumber = 2,
    kSlotFieldNumber = 1,
  };
  // required bytes command_apdu = 2;
  bool has_command_apdu() const;
  private:
  bool _internal_has_command_apdu() const;
  public:
  void clear_command_apdu();
  const std::string& command_apdu() const;
  void set_command_apdu(const std::string& value);
  void set_command_apdu(std::string&& value);
  void set_command_apdu(const char* value);
  void set_command_apdu(const void* value, size_t size);
  std::string* mutable_command_apdu();
  std::string* release_command_apdu();
  void set_allocated_command_apdu(std::string* command_apdu);
  private:
  const std::string& _internal_command_apdu() const;
  void _internal_set_command_apdu(const std::string& value);
  std::string* _internal_mutable_command_apdu();
  public:

  // required .contact.card_slot.CardSlot slot = 1;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::contact::card_slot::CardSlot slot() const;
  void set_slot(::contact::card_slot::CardSlot value);
  private:
  ::contact::card_slot::CardSlot _internal_slot() const;
  void _internal_set_slot(::contact::card_slot::CardSlot value);
  public:

  // @@protoc_insertion_point(class_scope:contact.iso7816_4.TransmitApdu)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr command_apdu_;
  int slot_;
  friend struct ::TableStruct_contact_2fiso7816_5f4_2eproto;
};
// -------------------------------------------------------------------

class ResponseApdu :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:contact.iso7816_4.ResponseApdu) */ {
 public:
  ResponseApdu();
  virtual ~ResponseApdu();

  ResponseApdu(const ResponseApdu& from);
  ResponseApdu(ResponseApdu&& from) noexcept
    : ResponseApdu() {
    *this = ::std::move(from);
  }

  inline ResponseApdu& operator=(const ResponseApdu& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseApdu& operator=(ResponseApdu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ResponseApdu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseApdu* internal_default_instance() {
    return reinterpret_cast<const ResponseApdu*>(
               &_ResponseApdu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResponseApdu& a, ResponseApdu& b) {
    a.Swap(&b);
  }
  inline void Swap(ResponseApdu* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResponseApdu* New() const final {
    return CreateMaybeMessage<ResponseApdu>(nullptr);
  }

  ResponseApdu* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResponseApdu>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResponseApdu& from);
  void MergeFrom(const ResponseApdu& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseApdu* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "contact.iso7816_4.ResponseApdu";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_contact_2fiso7816_5f4_2eproto);
    return ::descriptor_table_contact_2fiso7816_5f4_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 1,
    kTrailerFieldNumber = 2,
  };
  // optional bytes body = 1;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const std::string& body() const;
  void set_body(const std::string& value);
  void set_body(std::string&& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  std::string* mutable_body();
  std::string* release_body();
  void set_allocated_body(std::string* body);
  private:
  const std::string& _internal_body() const;
  void _internal_set_body(const std::string& value);
  std::string* _internal_mutable_body();
  public:

  // required uint32 trailer = 2;
  bool has_trailer() const;
  private:
  bool _internal_has_trailer() const;
  public:
  void clear_trailer();
  ::PROTOBUF_NAMESPACE_ID::uint32 trailer() const;
  void set_trailer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_trailer() const;
  void _internal_set_trailer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:contact.iso7816_4.ResponseApdu)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr body_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trailer_;
  friend struct ::TableStruct_contact_2fiso7816_5f4_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TransmitApdu

// required .contact.card_slot.CardSlot slot = 1;
inline bool TransmitApdu::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TransmitApdu::has_slot() const {
  return _internal_has_slot();
}
inline void TransmitApdu::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::contact::card_slot::CardSlot TransmitApdu::_internal_slot() const {
  return static_cast< ::contact::card_slot::CardSlot >(slot_);
}
inline ::contact::card_slot::CardSlot TransmitApdu::slot() const {
  // @@protoc_insertion_point(field_get:contact.iso7816_4.TransmitApdu.slot)
  return _internal_slot();
}
inline void TransmitApdu::_internal_set_slot(::contact::card_slot::CardSlot value) {
  assert(::contact::card_slot::CardSlot_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  slot_ = value;
}
inline void TransmitApdu::set_slot(::contact::card_slot::CardSlot value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:contact.iso7816_4.TransmitApdu.slot)
}

// required bytes command_apdu = 2;
inline bool TransmitApdu::_internal_has_command_apdu() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TransmitApdu::has_command_apdu() const {
  return _internal_has_command_apdu();
}
inline void TransmitApdu::clear_command_apdu() {
  command_apdu_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TransmitApdu::command_apdu() const {
  // @@protoc_insertion_point(field_get:contact.iso7816_4.TransmitApdu.command_apdu)
  return _internal_command_apdu();
}
inline void TransmitApdu::set_command_apdu(const std::string& value) {
  _internal_set_command_apdu(value);
  // @@protoc_insertion_point(field_set:contact.iso7816_4.TransmitApdu.command_apdu)
}
inline std::string* TransmitApdu::mutable_command_apdu() {
  // @@protoc_insertion_point(field_mutable:contact.iso7816_4.TransmitApdu.command_apdu)
  return _internal_mutable_command_apdu();
}
inline const std::string& TransmitApdu::_internal_command_apdu() const {
  return command_apdu_.GetNoArena();
}
inline void TransmitApdu::_internal_set_command_apdu(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  command_apdu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TransmitApdu::set_command_apdu(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  command_apdu_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact.iso7816_4.TransmitApdu.command_apdu)
}
inline void TransmitApdu::set_command_apdu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  command_apdu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact.iso7816_4.TransmitApdu.command_apdu)
}
inline void TransmitApdu::set_command_apdu(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  command_apdu_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact.iso7816_4.TransmitApdu.command_apdu)
}
inline std::string* TransmitApdu::_internal_mutable_command_apdu() {
  _has_bits_[0] |= 0x00000001u;
  return command_apdu_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TransmitApdu::release_command_apdu() {
  // @@protoc_insertion_point(field_release:contact.iso7816_4.TransmitApdu.command_apdu)
  if (!_internal_has_command_apdu()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return command_apdu_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TransmitApdu::set_allocated_command_apdu(std::string* command_apdu) {
  if (command_apdu != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  command_apdu_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), command_apdu);
  // @@protoc_insertion_point(field_set_allocated:contact.iso7816_4.TransmitApdu.command_apdu)
}

// -------------------------------------------------------------------

// ResponseApdu

// optional bytes body = 1;
inline bool ResponseApdu::_internal_has_body() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ResponseApdu::has_body() const {
  return _internal_has_body();
}
inline void ResponseApdu::clear_body() {
  body_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ResponseApdu::body() const {
  // @@protoc_insertion_point(field_get:contact.iso7816_4.ResponseApdu.body)
  return _internal_body();
}
inline void ResponseApdu::set_body(const std::string& value) {
  _internal_set_body(value);
  // @@protoc_insertion_point(field_set:contact.iso7816_4.ResponseApdu.body)
}
inline std::string* ResponseApdu::mutable_body() {
  // @@protoc_insertion_point(field_mutable:contact.iso7816_4.ResponseApdu.body)
  return _internal_mutable_body();
}
inline const std::string& ResponseApdu::_internal_body() const {
  return body_.GetNoArena();
}
inline void ResponseApdu::_internal_set_body(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ResponseApdu::set_body(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact.iso7816_4.ResponseApdu.body)
}
inline void ResponseApdu::set_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact.iso7816_4.ResponseApdu.body)
}
inline void ResponseApdu::set_body(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  body_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact.iso7816_4.ResponseApdu.body)
}
inline std::string* ResponseApdu::_internal_mutable_body() {
  _has_bits_[0] |= 0x00000001u;
  return body_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ResponseApdu::release_body() {
  // @@protoc_insertion_point(field_release:contact.iso7816_4.ResponseApdu.body)
  if (!_internal_has_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return body_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseApdu::set_allocated_body(std::string* body) {
  if (body != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  body_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:contact.iso7816_4.ResponseApdu.body)
}

// required uint32 trailer = 2;
inline bool ResponseApdu::_internal_has_trailer() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ResponseApdu::has_trailer() const {
  return _internal_has_trailer();
}
inline void ResponseApdu::clear_trailer() {
  trailer_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResponseApdu::_internal_trailer() const {
  return trailer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ResponseApdu::trailer() const {
  // @@protoc_insertion_point(field_get:contact.iso7816_4.ResponseApdu.trailer)
  return _internal_trailer();
}
inline void ResponseApdu::_internal_set_trailer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  trailer_ = value;
}
inline void ResponseApdu::set_trailer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_trailer(value);
  // @@protoc_insertion_point(field_set:contact.iso7816_4.ResponseApdu.trailer)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace iso7816_4
}  // namespace contact

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_contact_2fiso7816_5f4_2eproto
